<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.core.mapper.UcProdDoMapper">
  <resultMap id="BaseResultMap" type="com.company.core.entity.UcProdDo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="PROD_ID" jdbcType="VARCHAR" property="prodId" />
    <result column="PROD_NAME" jdbcType="VARCHAR" property="prodName" />
    <result column="PROD_STATUS" jdbcType="CHAR" property="prodStatus" />
    <result column="OPEN_DATE" jdbcType="CHAR" property="openDate" />
    <result column="CREATE_TIME" jdbcType="CHAR" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="CHAR" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    PROD_ID, PROD_NAME, PROD_STATUS, OPEN_DATE, CREATE_TIME, UPDATE_TIME
  </sql>
  <select id="selectByExample" parameterType="com.company.core.entity.UcProdDoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from UC_PROD
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from UC_PROD
    where PROD_ID = #{prodId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from UC_PROD
    where PROD_ID = #{prodId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.company.core.entity.UcProdDoExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from UC_PROD
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.company.core.entity.UcProdDo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into UC_PROD (PROD_ID, PROD_NAME, PROD_STATUS, 
      OPEN_DATE, CREATE_TIME, UPDATE_TIME
      )
    values (#{prodId,jdbcType=VARCHAR}, #{prodName,jdbcType=VARCHAR}, #{prodStatus,jdbcType=CHAR}, 
      #{openDate,jdbcType=CHAR}, #{createTime,jdbcType=CHAR}, #{updateTime,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.company.core.entity.UcProdDo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into UC_PROD
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="prodId != null">
        PROD_ID,
      </if>
      <if test="prodName != null">
        PROD_NAME,
      </if>
      <if test="prodStatus != null">
        PROD_STATUS,
      </if>
      <if test="openDate != null">
        OPEN_DATE,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="prodId != null">
        #{prodId,jdbcType=VARCHAR},
      </if>
      <if test="prodName != null">
        #{prodName,jdbcType=VARCHAR},
      </if>
      <if test="prodStatus != null">
        #{prodStatus,jdbcType=CHAR},
      </if>
      <if test="openDate != null">
        #{openDate,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.company.core.entity.UcProdDoExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from UC_PROD
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update UC_PROD
    <set>
      <if test="record.prodId != null">
        PROD_ID = #{record.prodId,jdbcType=VARCHAR},
      </if>
      <if test="record.prodName != null">
        PROD_NAME = #{record.prodName,jdbcType=VARCHAR},
      </if>
      <if test="record.prodStatus != null">
        PROD_STATUS = #{record.prodStatus,jdbcType=CHAR},
      </if>
      <if test="record.openDate != null">
        OPEN_DATE = #{record.openDate,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=CHAR},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update UC_PROD
    set PROD_ID = #{record.prodId,jdbcType=VARCHAR},
      PROD_NAME = #{record.prodName,jdbcType=VARCHAR},
      PROD_STATUS = #{record.prodStatus,jdbcType=CHAR},
      OPEN_DATE = #{record.openDate,jdbcType=CHAR},
      CREATE_TIME = #{record.createTime,jdbcType=CHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.company.core.entity.UcProdDo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update UC_PROD
    <set>
      <if test="prodName != null">
        PROD_NAME = #{prodName,jdbcType=VARCHAR},
      </if>
      <if test="prodStatus != null">
        PROD_STATUS = #{prodStatus,jdbcType=CHAR},
      </if>
      <if test="openDate != null">
        OPEN_DATE = #{openDate,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=CHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=CHAR},
      </if>
    </set>
    where PROD_ID = #{prodId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.company.core.entity.UcProdDo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update UC_PROD
    set PROD_NAME = #{prodName,jdbcType=VARCHAR},
      PROD_STATUS = #{prodStatus,jdbcType=CHAR},
      OPEN_DATE = #{openDate,jdbcType=CHAR},
      CREATE_TIME = #{createTime,jdbcType=CHAR},
      UPDATE_TIME = #{updateTime,jdbcType=CHAR}
    where PROD_ID = #{prodId,jdbcType=VARCHAR}
  </update>
</mapper>